@page "/download"
@using Octokit;

<PageTitle>Download - Blazam</PageTitle>
<MudContainer MaxWidth=MaxWidth.Medium Class="pt-7">
    <MudText Align="Align.Center" Class="mb-7" Typo=Typo.h4>Download</MudText>
    <iframe class="mud-width-full" style="height:800px;" src="https://docs.blazam.org/install/requirements/"/>
    

    @if (Error == "")
    {
        <InfoCard Elevation=0 Class="mb-7" Horizontal=false Icon="@Icons.Material.Outlined.InstallDesktop">
            <MudText Align=Align.Center Class="mt-5 mb-3" Typo=Typo.h5>Web Installer (Recommended)</MudText>

            <MudText Align=Align.Center Class="mb-5">
                Installing via the Web Installer is the recommended method as it performs all
                required pre-installation checks automatically, and configures the application to launch
                based on the chosen installation type.
            </MudText>
            <MudText Align=Align.Center Class="mb-5">
                The Web Installer allows installing the application under IIS, or as a stand-alone service installed under
                Program Files.
            </MudText>

            <MudAlert Class="mb-5" Variant=Variant.Outlined Severity="Severity.Warning">
                <MudText Align=Align.Center>The web installer is not signed. Code-signing certificates are very expensive (~$400USD/yr) and the free nature of this
                    app prevents us from purchasing one.<br /><br />
                You may see a Windows Defender warning when running the installer. To allow it to continue,
                    click "More Info" and then "Run Anyway".<br /><br />
                Best practices would say to check the MD5 of the file downloaded and ensure it matches the value
                shown below, then scan with AV/run in sandbox, before installing.
                </MudText>
            </MudAlert>

                <MudLink Class="mx-auto d-table" Href="/download/setup.exe" Target=Target.Blank>
                    <MudButton OnClick=@(async()=>{
                       await _jsRuntime.InvokeVoidAsync("webInstallerDownloaded", null);
                       await _jsRuntime.InvokeVoidAsync("googleAdsConversion", null);
                       }) Variant="Variant.Filled" Color="Color.Primary">Download Web Installer</MudButton>

                </MudLink>
                
                <MudLink Class="mx-auto d-table mt-4" Disabled Href="/download/linux_insall.sh" Target=Target.Blank>
                    <MudButton Disabled OnClick=@(async()=>{
                               await _jsRuntime.InvokeVoidAsync("googleAdsConversion", null);
                               await _jsRuntime.InvokeVoidAsync("shDownloaded", null);
                               }) Variant="Variant.Filled" Color="Color.Primary">(Coming Soon) Download Linux Beta Installer</MudButton>
                </MudLink>
                <MudText Align=Align.Center Class="mt-5 mud-width-full d-block" Typo="Typo.caption">MD5: 241e18c02e99dd9ef8a3893ce27e01a1</MudText>
                <MudText Align=Align.Center Class="mt-5 mud-width-full d-block" Typo="Typo.caption">SHA256: 3e4dff37ec88ec7bd82f2eb985c8cc9f8988010985fdd246c4d69186d845da39</MudText>
           


        </InfoCard>

        <InfoCard Elevation=0 Horizontal=false Icon="@Icons.Material.Outlined.IntegrationInstructions">
            <MudText Align=Align.Center Class="mt-5 mb-3" Typo=Typo.h5>Manual Installation</MudText>

            <MudText Align=Align.Center Class="mb-5">
                If you need to install in a way that the Web Installer does not allow, or you're feeling particularly adventerous, use the manual
                installation method.

            </MudText>
            <MudText Align=Align.Center Class="mb-5">
                This method requires you to manually set up database connections and your web hosting solution.

            </MudText>


         
                <MudLink Class="mx-auto d-table mb-1" Href="https://docs.blazam.org/install/manual/" Target=Target.Blank>
                    <MudButton Color=Color.Primary>Please start with the instructions</MudButton>

                </MudLink>
                <MudText Align=Align.Center Class="">then</MudText>
                <MudLink Class="mx-auto d-table mt-4" Href="/download/zip" Target=Target.Blank>
                    <MudButton OnClick=@(async()=>{
                       await _jsRuntime.InvokeVoidAsync("googleAdsConversion", null);
                       await _jsRuntime.InvokeVoidAsync("zipDownloaded", null);
                       }) Variant="Variant.Filled" Color="Color.Primary">Download Zip</MudButton>

                </MudLink>
                <MudLink Class="mx-auto d-table mt-4" Href="/download/beta" Target=Target.Blank>
                    <MudButton OnClick=@(async()=>{
                               await _jsRuntime.InvokeVoidAsync("googleAdsConversion", null);
                               await _jsRuntime.InvokeVoidAsync("zipDownloaded", null);
                               }) Variant="Variant.Filled" Color="Color.Primary">Download Linux Beta Zip</MudButton>
                </MudLink>

            


        </InfoCard>


    }
    else
    {
        <MudAlert Background="Background.Danger" Visible>
            Error collecting latest version from GitHub.
        </MudAlert>
    }

    @* <DisplayAd /> *@
</MudContainer>
@code {

    [CascadingParameter]
    public MainLayout Layout { get; set; }

    [Inject]
    private IJSRuntime _jsRuntime { get; set; }

    string downloadUri = "";
    string Error = "";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
            await _jsRuntime.InvokeVoidAsync("productViewed", null);
    }

  
}
